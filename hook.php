<?php

/////////////////////////////////////////////////////////////////////////////
//             –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ —Å–µ–±—è –≤–µ–±—Ö—É–∫–∏ –æ—Ç Telegram             //
/////////////////////////////////////////////////////////////////////////////

namespace WeRtOG\VagachatBot;

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω—É–∂–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

use WeRtOG\BottoGram\BottoConfig;
use WeRtOG\BottoGram\Telegram\Model\InlineQueryResultArray;
use WeRtOG\BottoGram\Telegram\Model\InlineQueryResultArticle;
use WeRtOG\BottoGram\Telegram\Model\InputTextMessageContent;
use WeRtOG\BottoGram\Telegram\Model\ParseMode;
use WeRtOG\BottoGram\Telegram\Model\Response;
use WeRtOG\BottoGram\Telegram\Telegram;

// –ü–æ–¥–∫–ª—é—á–∞–µ–º Composer
require_once 'vendor/autoload.php';

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å—ã
require_once 'components/ChatModerator.php';
require_once 'components/BassmenJokes.php';

// –í–∫–ª—é—á–∞–µ–º –æ—Ç–ª–∞–¥–∫—É –∏ –ª–æ–≥–∏
ini_set("log_errors", 1);
ini_set("error_log", "app-error.log");

// –û–±—Ä–∞–±–æ—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
set_exception_handler(function ($Exception) {
    $ErrorText = '<code>' . $Exception->getMessage() . '</code> in <code>' .  basename($Exception->getFile()) . '</code>, line <code>' . $Exception->getLine() . '</code>' . PHP_EOL;
    error_log($ErrorText);
    echo $ErrorText;
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
$Config = BottoConfig::CreateFromJSONFile('config.json');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Telegram
$Telegram = new Telegram($Config->Token);

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç Telegram
$Telegram->OnResponse(function(Response $Response) {
    print_r($Response->GetData());
});


/////////////////////////////////////////////////////////////////////////////

$Update = $Telegram->GetUpdateFromInput();
$Message = $Update->Message ?? $Update->EditedMessage ?? null;
$InlineQuery = $Update->InlineQuery;

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
if($Message != null)
{
    if($Message->IsFromGroup)
    {
        $WhitelistedDomains = ChatModerator::WhitelistedDomainsFromJSONFile(__DIR__ . '/domains.json');
        $Moderator = new ChatModerator($WhitelistedDomains);

        if($Moderator->IsMessageNotSafe($Message))
        {
            $Telegram->DeleteMessage($Message->Chat->ID, $Message->MessageID);
        }
    }
    else
    {
        if($Message->Command == '/start')
            $Telegram->SendMessage($Message->Chat->ID, 'üëã _–ø—Ä–∏–≤—á—ë–¥–µ–ª_');

        $Telegram->SendSticker($Message->Chat->ID, 'CAACAgIAAxkBAAMiYUfRtM4tpYmmGCtg6H6ztq3NCYYAAjoAA_K1bSjLDmA18sCjPCAE');
        $Telegram->SendMessage($Message->Chat->ID, '*—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–ø–∏—Ç*', ParseMode: ParseMode::HTML);
    }
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
if($InlineQuery != null)
{
    $RandomBassmenAnekdot = BassmenJokes::GetRandom();
    $Telegram->AnswerInlineQuery($InlineQuery->ID, 
        Results: new InlineQueryResultArray(
            new InlineQueryResultArticle(
                ID: uniqid(), 
                Title: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—É—é —à—É—Ç–∫—É –ø—Ä–æ –±–∞—Å–∏—Å—Ç–∞',
                Description: '–ë–µ–∑ –Ω–µ–≥–∞—Ç–∏–≤–∞!',
                InputMessageContent: new InputTextMessageContent($RandomBassmenAnekdot . "\n\nüòù _–ë–µ–∑ –Ω–µ–≥–∞—Ç–∏–≤–∞!_", ParseMode: ParseMode::Markdown),
                ThumbUrl: 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/apple/285/guitar_1f3b8.png'
            )
        ),
        CacheTime: 1
    );
}


